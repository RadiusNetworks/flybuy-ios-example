// Generated by Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import CoreData;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FlyBuySDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif





@class CustomerInfo;

SWIFT_CLASS("_TtC9FlyBuySDK14ClaimOrderInfo")
@interface ClaimOrderInfo : NSObject
- (nonnull instancetype)initWithCustomerCarColor:(NSString * _Nullable)customerCarColor customerCarType:(NSString * _Nullable)customerCarType customerLicensePlate:(NSString * _Nullable)customerLicensePlate customerName:(NSString * _Nullable)customerName customerPhone:(NSString * _Nullable)customerPhone pushToken:(NSString * _Nonnull)pushToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCustomerInfo:(CustomerInfo * _Nonnull)customerInfo pushToken:(NSString * _Nonnull)pushToken pickupType:(NSString * _Nullable)pickupType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK20ConfigurationManager")
@interface ConfigurationManager : NSObject
- (void)fetchWithCallback:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))callback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC9FlyBuySDK9CoreOrder")
@interface CoreOrder : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface CoreOrder (SWIFT_EXTENSION(FlyBuySDK))
@property (nonatomic) int64_t customerState;
@property (nonatomic) int64_t id;
@property (nonatomic, copy) NSString * _Nullable partnerIdentifier;
@property (nonatomic) int64_t siteId;
@property (nonatomic) int64_t state;
@end

enum OrderState : NSInteger;
@class PickupWindow;

SWIFT_CLASS("_TtC9FlyBuySDK15CreateOrderInfo")
@interface CreateOrderInfo : NSObject
- (nonnull instancetype)initWithSiteID:(NSInteger)siteID partnerIdentifier:(NSString * _Nonnull)partnerIdentifier customerCarColor:(NSString * _Nullable)customerCarColor customerCarType:(NSString * _Nullable)customerCarType customerLicensePlate:(NSString * _Nullable)customerLicensePlate customerName:(NSString * _Nullable)customerName customerPhone:(NSString * _Nullable)customerPhone pushToken:(NSString * _Nullable)pushToken state:(enum OrderState)state pickupWindow:(PickupWindow * _Nullable)pickupWindow OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSiteID:(NSInteger)siteID partnerIdentifier:(NSString * _Nonnull)partnerIdentifier customerCarColor:(NSString * _Nullable)customerCarColor customerCarType:(NSString * _Nullable)customerCarType customerLicensePlate:(NSString * _Nullable)customerLicensePlate customerName:(NSString * _Nullable)customerName customerPhone:(NSString * _Nullable)customerPhone pushToken:(NSString * _Nullable)pushToken pickupWindow:(PickupWindow * _Nullable)pickupWindow OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK8Customer")
@interface Customer : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
@property (nonatomic, readonly, copy) NSString * _Nullable emailAddress;
@property (nonatomic, readonly, strong) CustomerInfo * _Nonnull info;
@property (nonatomic, readonly) BOOL registered;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK15CustomerConsent")
@interface CustomerConsent : NSObject
@property (nonatomic, readonly) BOOL termsOfService;
@property (nonatomic, readonly) BOOL ageVerification;
- (nonnull instancetype)initWithTermsOfService:(BOOL)termsOfService ageVerification:(BOOL)ageVerification OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK12CustomerInfo")
@interface CustomerInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nullable carType;
@property (nonatomic, readonly, copy) NSString * _Nullable carColor;
@property (nonatomic, readonly, copy) NSString * _Nullable licensePlate;
@property (nonatomic, readonly, copy) NSString * _Nullable phone;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name carType:(NSString * _Nullable)carType carColor:(NSString * _Nullable)carColor licensePlate:(NSString * _Nullable)licensePlate phone:(NSString * _Nullable)phone OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Allows managing the customer: creating, storing, updating, signing-out
/// Example:
/// \code
/// // get the current FlyBuy customer
/// FlyBuy.customer.current
///
/// \endcode
SWIFT_CLASS("_TtC9FlyBuySDK15CustomerManager")
@interface CustomerManager : NSObject
@property (nonatomic, readonly, strong) Customer * _Nullable current;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// create a FlyBuy customer
/// \param customerInfo contains the customer details
///
/// \param termsOfService user has accepted the terms of service
///
/// \param ageVerification user is of age to provide consent
///
/// \param callback Optional. Called with the new <code>Customer</code> and/or
/// any error encountered.
///
- (void)create:(CustomerInfo * _Nonnull)customerInfo termsOfService:(BOOL)termsOfService ageVerification:(BOOL)ageVerification callback:(void (^ _Nullable)(Customer * _Nullable, NSError * _Nullable))callback;
/// create a FlyBuy customer
/// \param customerInfo contains the customer details
///
/// \param customerConsent contains the customer consent info
///
/// \param callback Optional. Called with the new <code>Customer</code> and/or
/// any error encountered.
///
- (void)create:(CustomerInfo * _Nonnull)customerInfo customerConsent:(CustomerConsent * _Nonnull)customerConsent callback:(void (^ _Nullable)(Customer * _Nullable, NSError * _Nullable))callback SWIFT_DEPRECATED_MSG("Method Deprecated");
/// update a FlyBuy customer
/// \param customerInfo contains the customer details
///
/// \param callback Optional. Called with the new <code>Customer</code> and/or
/// any error encountered.
///
- (void)update:(CustomerInfo * _Nonnull)customerInfo callback:(void (^ _Nullable)(Customer * _Nullable, NSError * _Nullable))callback;
/// Login as a FlyBuy customer
/// \param emailAddress the account email
///
/// \param password the account password
///
- (void)loginWithEmailAddress:(NSString * _Nonnull)emailAddress password:(NSString * _Nonnull)password callback:(void (^ _Nullable)(Customer * _Nullable, NSError * _Nullable))callback;
/// Login as a FlyBuy customer with a token
/// \param token the account token
///
- (void)loginWithTokenWithToken:(NSString * _Nonnull)token callback:(void (^ _Nullable)(Customer * _Nullable, NSError * _Nullable))callback;
/// Convert the current customer (an anonymous account) to a registered account
/// \param emailAddress the account email
///
/// \param password the account password
///
/// \param passwordConfirmation the account password confirmation
///
- (void)signUpWithEmailAddress:(NSString * _Nonnull)emailAddress password:(NSString * _Nonnull)password callback:(void (^ _Nullable)(Customer * _Nullable, NSError * _Nullable))callback;
/// Request password reset for an email address
/// \param emailAddress the account email
///
- (void)requestNewPasswordWithEmailAddress:(NSString * _Nonnull)emailAddress callback:(void (^ _Nullable)(NSError * _Nullable))callback;
/// Perform password change for an email address
/// \param resetPasswordToken the token for the new password
///
/// \param password the account password
///
/// \param confirmation the account password confirmation
///
- (void)setNewPasswordWithResetPasswordToken:(NSString * _Nonnull)resetPasswordToken password:(NSString * _Nonnull)password confrimation:(NSString * _Nonnull)confrimation callback:(void (^ _Nullable)(Customer * _Nullable, NSError * _Nullable))callback;
/// Signs out the FlyBuy user
- (void)logout;
/// Signs out the FlyBuy user
- (void)signOut SWIFT_DEPRECATED_MSG("Method Deprecated");
@end

typedef SWIFT_ENUM(NSInteger, CustomerState, open) {
  CustomerStateCreated = 0,
  CustomerStateEnRoute = 1,
  CustomerStateNearby = 2,
  CustomerStateArrived = 3,
  CustomerStateWaiting = 4,
  CustomerStateCompleted = 5,
};



@class OrdersManager;
@class SitesManager;
@class NotifyManager;

SWIFT_CLASS("_TtC9FlyBuySDK6FlyBuy")
@interface FlyBuy : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OrdersManager * _Nonnull orders;)
+ (OrdersManager * _Nonnull)orders SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CustomerManager * _Nonnull customer;)
+ (CustomerManager * _Nonnull)customer SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SitesManager * _Nonnull sites;)
+ (SitesManager * _Nonnull)sites SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ConfigurationManager * _Nonnull config;)
+ (ConfigurationManager * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NotifyManager * _Nonnull notify;)
+ (NotifyManager * _Nonnull)notify SWIFT_WARN_UNUSED_RESULT;
/// Configures FlyBuy with the given options
/// Example:
/// \code
/// FlyBuy.configure(["token": "TOKEN_HERE"])
///
/// \endcode
+ (void)configure:(NSDictionary<NSString *, id> * _Nonnull)opts;
/// handles a remote notification which may contain FlyBuy order data
/// \param data contains the <code>userInfo</code> data from a remote notification
///
+ (void)handleRemoteNotification:(NSDictionary * _Nonnull)data;
/// Stops FlyBuy SDK from sending out location updates. They may start again if
/// new orders are created.
/// important:
/// This method should only be used for debugging purposes.
+ (void)stopLocationUpdates;
/// Updates the push token that FlyBuy uses to send push messages to the app.
+ (void)updatePushToken:(NSString * _Nonnull)newPushToken;
/// Updates the APNs device token that FlyBuy uses to send pushes to the app. This should only be used
/// when FlyBuy is configured to send pushes through APNs directly. If using a 3rd party service such as
/// Airship, OneSignal, etc, the correct method to call is <code>updatePushToken</code>.
+ (void)updateAPNPushToken:(NSData * _Nonnull)deviceToken;
@end


SWIFT_CLASS("_TtC9FlyBuySDK8Geofence")
@interface Geofence : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull latitude;
@property (nonatomic, readonly, copy) NSString * _Nonnull longitude;
@property (nonatomic, readonly) double radiusMeters;
@end

typedef SWIFT_ENUM(NSInteger, LocationAuthStatus, open) {
  LocationAuthStatusNotDetermined = 0,
  LocationAuthStatusRestricted = 1,
  LocationAuthStatusDenied = 2,
  LocationAuthStatusAuthorizedAlways = 3,
  LocationAuthStatusAuthorizedWhenInUse = 4,
};


SWIFT_CLASS("_TtC9FlyBuySDK9LoginInfo")
@interface LoginInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull emailAddress;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
- (nonnull instancetype)initWithEmailAddress:(NSString * _Nonnull)emailAddress password:(NSString * _Nonnull)password OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9FlyBuySDK16NotificationInfo")
@interface NotificationInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull content;
@property (nonatomic, readonly, copy) NSDictionary * _Nullable data;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CLCircularRegion;
@class Site;

SWIFT_CLASS("_TtC9FlyBuySDK13NotifyManager")
@interface NotifyManager : NSObject
- (void)createForSitesInRegion:(CLCircularRegion * _Nonnull)region notification:(NotificationInfo * _Nonnull)notification callback:(void (^ _Nonnull)(NSArray<Site *> * _Nullable, NSError * _Nullable))callback;
- (void)createForSites:(NSArray<Site *> * _Nonnull)sites notification:(NotificationInfo * _Nonnull)notification callback:(void (^ _Nonnull)(NSError * _Nullable))callback;
/// clears all notifications
/// \param callback will get called on completion of any errors encountered.
///
- (void)clearWithCallback:(void (^ _Nonnull)(NSError * _Nullable))callback;
- (BOOL)isFlyBuyNotifyUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class NSNumber;

SWIFT_CLASS("_TtC9FlyBuySDK5Order")
@interface Order : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly) NSInteger siteID;
@property (nonatomic) enum OrderState state;
@property (nonatomic) enum CustomerState customerState;
@property (nonatomic, readonly, copy) NSString * _Nullable partnerIdentifier;
@property (nonatomic, readonly, copy) NSString * _Nullable redemptionCode;
@property (nonatomic, readonly, copy) NSDate * _Nullable redeemedAt;
@property (nonatomic, readonly, copy) NSString * _Nullable displayName;
@property (nonatomic, readonly, strong) PickupWindow * _Nullable pickupWindow;
@property (nonatomic, copy) NSString * _Nullable pickupType;
@property (nonatomic, copy) NSDate * _Nullable etaAt;
@property (nonatomic, copy) NSDate * _Nullable completedAt;
@property (nonatomic, copy) NSDate * _Nullable createdAt;
@property (nonatomic, copy) NSDate * _Nullable updatedAt;
@property (nonatomic, copy) NSString * _Nullable customerRating;
@property (nonatomic, copy) NSString * _Nullable customerComment;
@property (nonatomic, readonly, copy) NSString * _Nullable siteName;
@property (nonatomic, readonly, copy) NSString * _Nullable sitePhone;
@property (nonatomic, readonly, copy) NSString * _Nullable siteStreetAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable siteFullAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable siteLocality;
@property (nonatomic, readonly, copy) NSString * _Nullable siteRegion;
@property (nonatomic, readonly, copy) NSString * _Nullable siteCountry;
@property (nonatomic, readonly, copy) NSString * _Nullable sitePostalCode;
@property (nonatomic, readonly, copy) NSString * _Nullable siteLongitude;
@property (nonatomic, readonly, copy) NSString * _Nullable siteLatitude;
@property (nonatomic, readonly, copy) NSString * _Nullable siteInstructions;
@property (nonatomic, readonly, copy) NSString * _Nullable siteDescription;
@property (nonatomic, readonly, copy) NSString * _Nullable siteCoverPhotoURL;
@property (nonatomic, readonly, copy) NSString * _Nullable sitePartnerIdentifier;
@property (nonatomic, readonly, copy) NSString * _Nullable projectAccentColor;
@property (nonatomic, readonly, copy) NSString * _Nullable projectAccentTextColor;
@property (nonatomic, readonly, copy) NSString * _Nullable projectLogoURL;
@property (nonatomic, readonly, copy) NSString * _Nullable customerName;
@property (nonatomic, readonly, copy) NSString * _Nullable customerCarType;
@property (nonatomic, readonly, copy) NSString * _Nullable customerCarColor;
@property (nonatomic, readonly, copy) NSString * _Nullable customerLicensePlate;
@property (nonatomic, readonly) BOOL projectMobileFlowAlwaysShowVehicleInfoFields;
@property (nonatomic, readonly) BOOL projectMobileFlowCustomerNameEditingEnabled;
@property (nonatomic, readonly) BOOL projectMobileFlowPickupTypeSelectionEnabled;
@property (nonatomic, readonly) BOOL projectMobileFlowRequireVehicleInfoIfVisible;
@property (nonatomic, readonly, copy) NSString * _Nullable curbsideLocalizedString;
@property (nonatomic, readonly, copy) NSString * _Nullable pickupLocalizedString;
@property (nonatomic, copy) NSString * _Nullable pushToken;
- (CLLocation * _Nullable)siteLocation SWIFT_WARN_UNUSED_RESULT;
- (NSNumber * _Nullable)siteDistanceFrom:(CLLocation * _Nonnull)location SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isOpen SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9FlyBuySDK10OrderEvent")
@interface OrderEvent : NSObject
- (nonnull instancetype)initWithOrderID:(NSInteger)orderID customerState:(enum CustomerState)customerState etaSeconds:(NSNumber * _Nullable)etaSeconds OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOrderID:(NSInteger)orderID state:(enum OrderState)state OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOrderID:(NSInteger)orderID locationAuthStatus:(enum LocationAuthStatus)locationAuthStatus OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOrderID:(NSInteger)orderID customerRating:(NSInteger)customerRating customerComments:(NSString * _Nullable)customerComments OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, OrderState, open) {
  OrderStateCreated = 0,
  OrderStateReady = 1,
  OrderStateDelayed = 2,
  OrderStateCancelled = 3,
  OrderStateCompleted = 4,
  OrderStateGone = 5,
};


/// Allows fetching the list of orders, creating a new order, or creating
/// order events.
/// Example:
/// \code
/// // fetch orders from FlyBuy
/// FlyBuy.orders.fetch()
///
/// \endcode
SWIFT_CLASS("_TtC9FlyBuySDK13OrdersManager")
@interface OrdersManager : NSObject
/// contains a list of all the orders
@property (nonatomic, readonly, copy) NSArray<Order *> * _Nullable all;
/// contains a list of all currently open orders
@property (nonatomic, readonly, copy) NSArray<Order *> * _Nullable open;
/// contains a list of all currently closed orders
@property (nonatomic, readonly, copy) NSArray<Order *> * _Nullable closed;
/// fetches the list of orders from the FlyBuy web API
/// \param callback will get called on completion with the array of
/// orders and any errors encountered. Optional.
///
- (void)fetchWithCallback:(void (^ _Nullable)(NSArray<Order *> * _Nullable, NSError * _Nullable))callback;
/// fetches an order using a redemption code
/// \param redemptionCode the redemption code for the order
///
/// \param callback will get called on completion with the
/// order and any errors encountered. Optional.
///
- (void)fetchWithRedemptionCode:(NSString * _Nonnull)redemptionCode callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback;
/// Claims an order using a redemption code and pickup type
/// \param redemptionCode the redemption code for the order
///
/// \param callback will get called on completion with the order and any errors encountered. Optional.
///
- (void)claimWithRedemptionCode:(NSString * _Nonnull)redemptionCode customerInfo:(CustomerInfo * _Nonnull)customerInfo pickupType:(NSString * _Nullable)pickupType callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback;
/// Claims an order using a redemption code
/// \param redemptionCode the redemption code for the order
///
/// \param callback will get called on completion with the order and any errors encountered. Optional.
///
- (void)claimWithRedemptionCode:(NSString * _Nonnull)redemptionCode customerInfo:(CustomerInfo * _Nonnull)customerInfo callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback;
/// Claims an order using a redemption code
/// \param redemptionCode the redemption code for the order
///
/// \param callback will get called on completion with the order and any errors encountered. Optional.
///
- (void)claimWithRedemptionCode:(NSString * _Nonnull)redemptionCode claimOrderInfo:(ClaimOrderInfo * _Nonnull)claimOrderInfo customerConsent:(CustomerConsent * _Nullable)customerConsent callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback SWIFT_DEPRECATED_MSG("Method Deprecated");
/// creates an order using the FlyBuy web API
/// \param siteID site identifier
///
/// \param partnerIdentifier partner identifier for the order
///
/// \param customerInfo customer information
///
/// \param state initial order state
///
/// \param pickupWindow optional pickup window for the order
///
/// \param callback called once either an order is created or an error is encountered
///
- (void)createWithSiteID:(NSInteger)siteID partnerIdentifier:(NSString * _Nonnull)partnerIdentifier customerInfo:(CustomerInfo * _Nonnull)customerInfo pickupWindow:(PickupWindow * _Nullable)pickupWindow state:(enum OrderState)state callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback;
/// creates an order using the FlyBuy web API
/// \param siteID site identifier
///
/// \param partnerIdentifier partner identifier for the order
///
/// \param customerInfo customer information
///
/// \param pickupWindow optional pickup window for the order
///
/// \param callback called once either an order is created or an error is encountered
///
- (void)createWithSiteID:(NSInteger)siteID partnerIdentifier:(NSString * _Nonnull)partnerIdentifier customerInfo:(CustomerInfo * _Nonnull)customerInfo pickupWindow:(PickupWindow * _Nullable)pickupWindow callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback;
/// creates an order using the FlyBuy web API
/// \param info the customer and order info necessary to create an order
///
/// \param callback called once either an order is created or an error is encountered
///
- (void)createWithInfo:(CreateOrderInfo * _Nonnull)info callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback SWIFT_DEPRECATED_MSG("Method Deprecated");
/// creates an order event that sets the customer state
/// \param order specifies which order this event relates to
///
/// \param customerState contains the customer state which should be set on the order
///
/// \param callback Optional. Gets called at completion with the order and any
/// error encountered.
///
- (void)eventWithOrder:(Order * _Nonnull)order customerState:(enum CustomerState)customerState callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback SWIFT_DEPRECATED_MSG("Method Deprecated");
/// creates an order event that sets the customer state
/// \param orderID specifies which order ID this event relates to
///
/// \param customerState contains the customer state which should be set on the order
///
/// \param callback Optional. Gets called at completion with the order and any
/// error encountered.
///
- (void)eventWithOrderID:(NSInteger)orderID customerState:(enum CustomerState)customerState callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback;
/// creates an order event that sets the order state
/// \param orderID specifies which order ID this event relates to
///
/// \param state contains the order state which should be set on the order
///
/// \param callback Optional. Gets called at completion with the order and anyerror encountered.
///
- (void)eventWithOrderID:(NSInteger)orderID state:(enum OrderState)state callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback;
/// creates an order event that sets the customer state
/// \param orderID specifies which order ID this event relates to
///
/// \param customerState contains the customer state which should be set on the order
///
/// \param callback Optional. Gets called at completion with the order and any
/// error encountered.
///
- (void)rateOrderWithOrderID:(NSInteger)orderID rating:(NSInteger)rating comments:(NSString * _Nullable)comments callback:(void (^ _Nullable)(Order * _Nullable, NSError * _Nullable))callback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9FlyBuySDK10Pagination")
@interface Pagination : NSObject
@property (nonatomic, readonly) NSInteger currentPage;
@property (nonatomic, readonly) NSInteger totalPages;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK12PickupWindow")
@interface PickupWindow : NSObject
@property (nonatomic, readonly, copy) NSDate * _Nonnull start;
@property (nonatomic, readonly, copy) NSDate * _Nonnull end;
- (nonnull instancetype)initWithStart:(NSDate * _Nonnull)start end:(NSDate * _Nonnull)end OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(NSDate * _Nonnull)date;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK20RequestPasswordReset")
@interface RequestPasswordReset : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK14SetNewPassword")
@interface SetNewPassword : NSObject
- (nonnull instancetype)initWithResetPasswordToken:(NSString * _Nonnull)resetPasswordToken password:(NSString * _Nonnull)password confirmation:(NSString * _Nonnull)confirmation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK10SignUpInfo")
@interface SignUpInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull emailAddress;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
@property (nonatomic, readonly, copy) NSString * _Nonnull passwordConfirmation;
- (nonnull instancetype)initWithEmailAddress:(NSString * _Nonnull)emailAddress password:(NSString * _Nonnull)password passwordConfirmation:(NSString * _Nonnull)passwordConfirmation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9FlyBuySDK4Site")
@interface Site : NSObject
@property (nonatomic, readonly) NSInteger id;
@property (nonatomic, readonly, copy) NSString * _Nullable partnerIdentifier;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable phone;
@property (nonatomic, readonly, copy) NSString * _Nullable streetAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable fullAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable locality;
@property (nonatomic, readonly, copy) NSString * _Nullable region;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
@property (nonatomic, readonly, copy) NSString * _Nullable postalCode;
@property (nonatomic, readonly, copy) NSString * _Nullable longitude;
@property (nonatomic, readonly, copy) NSString * _Nullable latitude;
@property (nonatomic, readonly, copy) NSString * _Nullable instructions;
@property (nonatomic, readonly, copy) NSString * _Nullable descriptionText;
@property (nonatomic, readonly, copy) NSString * _Nullable coverPhotoURL;
@property (nonatomic, readonly, copy) NSString * _Nullable projectAccentColor;
@property (nonatomic, readonly, copy) NSString * _Nullable projectAccentTextColor;
@property (nonatomic, readonly, copy) NSString * _Nullable projectLogoURL;
@property (nonatomic, readonly, strong) Geofence * _Nullable geofence;
- (CLLocation * _Nullable)location SWIFT_WARN_UNUSED_RESULT;
- (NSNumber * _Nullable)distanceFrom:(CLLocation * _Nonnull)loc SWIFT_WARN_UNUSED_RESULT;
@end


/// Allows fetching the list of sites
/// Example:
/// \code
/// // fetch sites from FlyBuy
/// FlyBuy.sites.fetch()
///
/// \endcode
SWIFT_CLASS("_TtC9FlyBuySDK12SitesManager")
@interface SitesManager : NSObject
@property (nonatomic, readonly, copy) NSArray<Site *> * _Nullable all;
/// fetches the list of sites from the FlyBuy web API
/// \param callback will get called on completion with the array of
/// sites and any errors encountered. Optional.
///
- (void)fetchWithQuery:(NSString * _Nullable)query page:(NSInteger)page callback:(void (^ _Nullable)(NSArray<Site *> * _Nullable, Pagination * _Nullable, NSError * _Nullable))callback;
- (void)fetchWithRegion:(CLCircularRegion * _Nonnull)region page:(NSInteger)page callback:(void (^ _Nullable)(NSArray<Site *> * _Nullable, NSError * _Nullable))callback;
- (void)fetchWithRegion:(CLCircularRegion * _Nonnull)region page:(NSInteger)page per:(NSInteger)per callback:(void (^ _Nullable)(NSArray<Site *> * _Nullable, NSError * _Nullable))callback;
- (void)fetchAllWithQuery:(NSString * _Nullable)query callback:(void (^ _Nullable)(NSArray<Site *> * _Nullable, NSError * _Nullable))callback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9FlyBuySDK15UpdateOrderInfo")
@interface UpdateOrderInfo : NSObject
- (nonnull instancetype)initWithPushToken:(NSString * _Nonnull)pushToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
